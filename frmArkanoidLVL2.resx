<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Reloj.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPelota.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BU2eEWjDDsOeAAAAAElFTkSuQmCC
</value>
  </data>
</root>