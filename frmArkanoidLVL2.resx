<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Reloj.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPelota.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>